workload_category,subcategories,typical_cs3_score_range,primary_decision_factors,recommended_approach,separation_feasibility,architectural_recommendations,success_criteria,red_flags
OLTP Systems,High Frequency Trading | Payment Processing | User Sessions | Inventory Management,1.5-3.0,Latency sensitivity | Transaction frequency | Network reliability,Hybrid or integrated architecture with local storage,Limited - only for less critical OLTP workloads,"Use local NVMe with async replication to remote storage | Implement read replicas with separation for reporting | Consider tiered architecture (hot local, cold remote)",Maintain sub-10ms P99 latency for critical transactions | Ensure zero data loss on single node failure | Minimize network dependency for write operations,Sub-millisecond latency requirements | Strict distributed ACID needs | High-frequency write operations (>10k TPS)
OLAP Systems,Data Warehousing | Business Intelligence | Reporting | ETL Pipelines,4.0-5.0,Scale elasticity | Cost sensitivity | Data access patterns,Full compute-storage separation,Excellent - ideal workload for separation,"Implement disaggregated architecture with object storage | Use columnar storage formats (Parquet, Delta, Iceberg) | Enable auto-scaling compute based on query load",Achieve cost optimization through elastic scaling | Maintain query performance with caching strategies | Enable independent scaling of compute and storage,Real-time latency requirements | Frequent small updates to data | Complex distributed transactions
HTAP Systems,Real-time Analytics | Operational Reporting | Mixed Workloads,3.0-4.5,Workload mix | Consistency requirements | Latency tolerance,Workload-aware separation with intelligent routing,Good - with proper workload isolation,Implement workload-aware query routing | Use different consistency models for OLTP vs OLAP | Enable dynamic resource allocation based on workload type,Maintain OLTP performance while enabling analytical queries | Achieve workload isolation without interference | Balance consistency requirements across workload types,Real-time OLTP with strict ACID mixed with heavy analytics | Inability to tolerate any consistency lag | Extremely tight coupling between transactional and analytical queries
AI/ML Systems,Training Pipelines | Feature Stores | Model Serving | Vector Databases,3.5-5.0,Compute intensity | Scale elasticity | Cost sensitivity,Pattern-specific separation strategies,"Excellent for batch, good for serving",Separate compute clusters for different ML workloads | Use specialized storage for vectors and features | Implement tiered storage for training data and models,Optimize cost through elastic compute scaling | Maintain data lineage and versioning | Enable rapid experimentation and deployment,Ultra-low latency inference requirements | Extremely large model sizes requiring co-location | Real-time streaming with strict ordering requirements
Time-Series Systems,IoT Monitoring | Financial Data | System Metrics | Sensor Networks,3.0-4.5,Ingestion rate | Query patterns | Retention requirements,Tiered separation based on data age and access patterns,Good - especially for historical analytics,Use time-based partitioning and tiering | Implement local buffers for high-frequency ingestion | Enable compression and columnar storage for historical data,Handle high ingestion rates without data loss | Provide fast time-range queries on historical data | Optimize storage costs through automated tiering,Extremely high ingestion rates (>1M points/second) | Real-time alerting with sub-second requirements | Complex time-series joins across distributed storage
Graph Systems,Social Networks | Recommendation Engines | Knowledge Graphs | Network Analysis,2.0-4.0,Traversal patterns | Graph size | Query complexity,Selective separation based on graph characteristics,Variable - depends heavily on graph properties,Use graph partitioning strategies for distributed storage | Implement caching for frequently accessed subgraphs | Consider hybrid approaches with hot data local,Maintain acceptable traversal performance | Enable graph algorithms on large datasets | Support both OLTP and analytical graph queries,Highly connected graphs requiring frequent random access | Real-time graph traversals with complex patterns | Large graphs that don't partition well
